<Window x:Class="WMHBattleReporter.View.BattleReporterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WMHBattleReporter.View"
        xmlns:vm="clr-namespace:WMHBattleReporter.ViewModel"
        mc:Ignorable="d"
        Title="BattleReporterWindow" Height="450" Width="800">

    <Window.Resources>
        <vm:AdminViewModel x:Key="AdminVM"/>
        <vm:BattleReportViewModel x:Key="BattleReportVM"/>
        <vm:LoginOrRegisterViewModel x:Key="LoginOrRegisterVM"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Visibility="Hidden" x:Name="LoggedInGrid" DataContext="{StaticResource LoginOrRegisterVM}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1">
                <Label Content="Current User:"/>
            </StackPanel>
            <StackPanel Grid.Column="2">
                <Label Content="{Binding LoggedInUsersUsername, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" x:Name="LoggedInUserLabel"/>
                <Button Content="Logout" Margin="5" x:Name="LogoutButton" Command="{Binding LogoutCommand}" Click="LogoutButton_Click"/>
            </StackPanel>
        </Grid>
        <Grid Visibility="Visible" x:Name="LoginOrRegisterGrid" DataContext="{StaticResource LoginOrRegisterVM}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1">
                <Label Content="Username"/>
                <TextBox Margin="5,0,5,5" x:Name="UsernameTextBox" Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Grid.Column="2">
                <Label Content="Password"/>
                <TextBox Margin="5,0,5,5" x:Name="PasswordTextBox" Text="{Binding Password, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Grid.Column="3">
                <Button Content="Register" Margin="5" x:Name="RegisterButton" Command="{Binding RegisterCommand}" Click="RegisterButton_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=UsernameTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=PasswordTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Login" Margin="5" x:Name="LoginButton" Command="{Binding LoginCommand}" Click="LoginButton_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=UsernameTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=PasswordTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
        <TabControl Grid.Row="1">
            <TabItem Header="Game Statistics" x:Name="GameStatisticsTabItem">

            </TabItem>
            <TabItem DataContext="{StaticResource BattleReportVM}" Header="Add Battle Report" x:Name="AddBattleReportTabItem"
                     Selector.IsSelected="{Binding ViewSelected}" Loaded="AddBattleReportTabItem_Loaded" Height="20" VerticalAlignment="Top"
                     Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="115"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Users Data"/>
                    <StackPanel Grid.Row="1">
                        <Label Content="Users Faction"/>
                        <ComboBox x:Name="UserFactionComboBox" Margin="10,0,10,5"
                                  ItemsSource="{Binding UserFactionOptions}"
                                  SelectedItem="{Binding UsersFaction}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"/>
                        <Label Content="Users Casters"/>
                        <ComboBox x:Name="UserCasterComboBox"
                                  Margin="10,0,10,5"
                                  ItemsSource="{Binding UserCasterOptions}"
                                  SelectedItem="{Binding UsersCaster}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"/>
                    </StackPanel>
                    <Label Content="Opponents Data" Grid.Column="1"/>
                    <StackPanel Grid.Row="1" Grid.Column="1">
                        <Label Content="Opponents Faction"/>
                        <ComboBox x:Name="OpponentFactionComboBox" Margin="10,0,10,5"
                                  ItemsSource="{Binding OpponentFactionOptions}"
                                  SelectedItem="{Binding OpponentsFaction}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"/>
                        <Label Content="Opponents Caster"/>
                        <ComboBox x:Name="OpponentCasterComboBox"
                                  Margin="10,0,10,5"
                                  ItemsSource="{Binding OpponentCasterOptions}"
                                  SelectedItem="{Binding OpponentsCaster}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2">
                        <Label Content="Game Size"/>
                        <RadioButton GroupName="GameSize"
                                     Content="35 Points"
                                     Margin="10,0,10,0"
                                     x:Name="Points35RadioButton"
                                     IsChecked="{Binding GameSizeIs35Points}"/>
                        <RadioButton GroupName="GameSize"
                                     Content="50 Points"
                                     Margin="10,0,10,0"
                                     x:Name="Points50RadioButton"
                                     IsChecked="{Binding GameSizeIs50Points}"/>
                        <RadioButton GroupName="GameSize"
                                     x:Name="Points75RadioButton"
                                     Content="75 Points"
                                     Margin="10,0,10,0"
                                     IsChecked="{Binding GameSizeIs75Points}"/>
                        <RadioButton GroupName="GameSize"
                                     x:Name="Points100RadioButton"
                                     Content="100 Points"
                                     Margin="10,0,10,0"
                                     IsChecked="{Binding GameSizeIs100Points}"/>
                        <Label Content="Game Type"/>
                        <RadioButton GroupName="GameType"
                                     x:Name="MastersRadioButton"
                                     Content="Masters"
                                     Margin="10,0,10,0"
                                     IsChecked="{Binding GameTypeIsMasters}"/>
                        <RadioButton GroupName="GameType"
                                     x:Name="ChampionsRadioButton"
                                     Content="Champions"
                                     Margin="10,0,10,0"
                                     IsChecked="{Binding GameTypeIsChampions}"/>
                        <RadioButton GroupName="GameType"
                                     x:Name="SteamRollerRadioButton"
                                     Content="Steam Roller"
                                     Margin="10,0,10,0"
                                     IsChecked="{Binding GameTypeIsSteamRoller}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="1">
                        <Label Content="Declare Winner"
                               Margin="10,0,10,0"/>
                        <RadioButton GroupName="Winner" 
                                     Content="You won!" 
                                     Margin="10,0,0,0"
                                     x:Name="UserWonRadioButton"
                                     IsChecked="{Binding UserWon}"/>
                        <RadioButton GroupName="Winner" 
                                     Content="Opponent won." 
                                     Margin="10,0,0,0" 
                                     x:Name="OpponentWonRadioButton"
                                     IsChecked="{Binding OpponentWon}"/>
                        <Button x:Name="SaveBattleReport"
                                Content="Save Battle Report"
                                Margin="10"
                                Click="SaveBattleReport_Click"
                                Command="{Binding SaveBattleReportCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=UserFactionComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=UserCasterComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=OpponentFactionComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=OpponentCasterComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsChecked, ElementName=Points35RadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=Points50RadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=Points75RadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=Points100RadioButton}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsChecked, ElementName=MastersRadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=ChampionsRadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=SteamRollerRadioButton}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsChecked, ElementName=UserWonRadioButton}" Value="False"/>
                                                <Condition Binding="{Binding IsChecked, ElementName=OpponentWonRadioButton}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Content="Reset Input" x:Name="ResetInputButton" Click="ResetInputButton_Click" Margin="10,0,10,10"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Admin Page" x:Name="AdminPageTabItem" Visibility="Collapsed">
                <Grid DataContext="{StaticResource AdminVM}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <Label Content="New Faction"/>
                        <TextBox x:Name="NewFactionTextBox"
                                 Text="{Binding Path=NewFaction, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="10,0,10,0"/>
                        <Button x:Name="AddFactionButton"
                                Content="Add Faction"
                                Margin="10"
                                Click="AddFactionButton_Click"
                                Command="{Binding AddFactionCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text.Length, ElementName=NewFactionTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Label Content="Select Faction to Delete"/>
                        <ComboBox x:Name="CurrentFactionsComboBox"
                                  SelectedItem="{Binding FactionToDelete}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"
                                  Margin="10,0,10,0"
                                  ItemsSource="{Binding Path=Factions, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button x:Name="DeleteFactionButton"
                                Content="Delete Faction"
                                Margin="10"
                                Command="{Binding DeleteFactionCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=CurrentFactionsComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Label Content="New Caster"/>
                        <TextBox x:Name="NewCasterTextBox"
                                 Text="{Binding Path=NewCaster, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="10,0,10,10"/>
                        <Label Content="Select Faction"/>
                        <ComboBox x:Name="FactionOptionsComboBox"
                                  SelectedItem="{Binding NewCastersFaction}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"
                                  ItemsSource="{Binding FactionOptions, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="10,0,10,0"/>
                        <Button x:Name="AddCasterButton"
                                Content="Add Caster"
                                Margin="10"
                                Click="AddCasterButton_Click"
                                Command="{Binding AddCasterCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text.Length, ElementName=NewCasterTextBox, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=FactionOptionsComboBox, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Label Content="Select Caster from Faction to Delete"/>
                        <ComboBox x:Name="CurrentFactionCasters"
                                  Margin="10,0,10,0"
                                  SelectedItem="{Binding CasterToDelete}"
                                  IsSynchronizedWithCurrentItem="True"
                                  DisplayMemberPath="Name"
                                  ItemsSource="{Binding FactionCasters, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button x:Name="DeleteCasterButton"
                                Content="Delete Caster"
                                Margin="10"
                                Command="{Binding DeleteCasterCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=CurrentFactionCasters, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>